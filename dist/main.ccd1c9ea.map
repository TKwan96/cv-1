{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string","string2","console","log","length","n","step","setTimeout","innerHTML","substring","window","scrollTo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA,IAAIA,OAAOC,SAASC,aAAT,CAAuB,OAAvB,CAAX,EAA6C;AAC7C,IAAIC,QAAQF,SAASC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,s4CAAJ,EAqDI;AACJ,IAAIC,UAAU,EAAd,EAAkB;AAClBC,QAAQC,GAAR,CAAYH,OAAOI,MAAnB;AACA,IAAIC,IAAI,CAAR;;AAEA,IAAIC,OAAO,SAAPA,IAAO,GAAM;AACfC,aAAW,YAAM;AACf;AACA,QAAIP,OAAOK,CAAP,MAAc,IAAlB,EAAuB;AACrB;AACAJ,iBAAW,MAAX,CAFqB,CAEF;AACpB,KAHD,MAGO,IAAID,OAAOK,CAAP,MAAc,GAAlB,EAAsB;AAC3BJ,iBAAW,QAAX,CAD2B,CACP;AACrB,KAFM,MAEA;AACL;AACAA,iBAAWD,OAAOK,CAAP,CAAX;AACD;;AAEDT,SAAKY,SAAL,GAAiBP,OAAjB,CAZe,CAYW;AAC1BF,UAAMS,SAAN,GAAkBR,OAAOS,SAAP,CAAiB,CAAjB,EAAmBJ,CAAnB,CAAlB;AACAK,WAAOC,QAAP,CAAgB,CAAhB,EAAkB,KAAlB;AACAf,SAAKe,QAAL,CAAc,CAAd,EAAgB,KAAhB;AACA,QAAGN,IAAIL,OAAOI,MAAP,GAAc,CAArB,EAAuB;AACrB;AACAC,WAAK,CAAL;AACAC;AACD;AACF,GArBD,EAqBE,EArBF;AAsBD,CAvBD;AAwBAA","file":"main.ccd1c9ea.map","sourceRoot":"..\\src","sourcesContent":["// html 就是放 HTML 的\r\n// style 就是放 CSS 的\r\nlet html = document.querySelector('#html');  // 通过 css 选择器找到 #demo 元素\r\nlet style = document.querySelector('#style')\r\nlet string = `/* 你好，我叫TK\r\n* 接下来我要演示我的前端功底\r\n* 首先我要准备一个div\r\n*/\r\n#div1{\r\n  border: 1px solid red;\r\n  width: 200px;\r\n  height: 200px; \r\n}\r\n/* 接下来我把 div 变成一个八卦图\r\n* 注意看好了\r\n* 首先，把 div 变成一个圆\r\n*/\r\n#div1{\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n  border: none;\r\n}\r\n/* 八卦是阴阳形成的\r\n* 一黑一白\r\n*/\r\n#div1{\r\n  background: linear-gradient(90deg, rgba(255,255,255,1) 0%,\r\n  rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%,\r\n  rgba(0,0,0,1) 100%);\r\n}\r\n/* 加两个神秘的小球 */\r\n#div1::before{\r\n  width: 100px;\r\n  height: 100px;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #000;\r\n  border-radius: 50%; \r\n  background: radial-gradient(circle, rgba(255,255,255,1) 0%,\r\n    rgba(255,255,255,1) 25%,\r\n    rgba(0,0,0,1) 25%,\r\n    rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n  width: 100px;\r\n  height: 100px;\r\n  bottom: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #fff;\r\n  border-radius: 50%; \r\n  background: radial-gradient(circle, rgba(0,0,0,1) 0%,\r\n  rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%,\r\n  rgba(255,255,255,1) 100%);\r\n}\r\n\r\n`;  // string 使用来保存要展示的结果的\r\nlet string2 = \"\"; // string2 使用来缓存要显示到屏幕上的结果的\r\nconsole.log(string.length);\r\nlet n = 0; \r\n\r\nlet step = () => {\r\n  setTimeout(() => {\r\n    // 如何是回车就显示回车，而不是显示多余的尖括号?\r\n    if (string[n] === \"\\n\"){\r\n      // 如果是回车就不照搬\r\n      string2 += \"<br>\"; // 在 HTML 里回车要表示成 \"<br>\"换行\r\n    } else if (string[n] === \" \"){ \r\n      string2 += \"&nbsp;\" // 空格就将改成 ‘&nbsp’ \r\n    } else {\r\n      // 如果不是回车就照搬\r\n      string2 += string[n];\r\n    }\r\n\r\n    html.innerHTML = string2; // 得到的结果放到 innerHTML里面\r\n    style.innerHTML = string.substring(0,n);\r\n    window.scrollTo(0,99999);\r\n    html.scrollTo(0,99999);\r\n    if(n < string.length-1){\r\n      // 如果 n 不是最后一个，就继续\r\n      n += 1; \r\n      step();\r\n    }\r\n  },50);\r\n};\r\nstep();"]}