{"mappings":"AAAA,EAAkB,AAAlB,wBAA0B;AAClB,EAAU,AAAlB,wBAA0B;AAClB,GAAL,CAAC,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAO,QAAI,CAAwB,AAAxB,EAA0C,AAA1C,wCAA0C;AACrE,GAAf,CAAC,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,CAAQ;AAC3C,GAAG,CAAC,MAAM,IAAI,8mCAqDd,EAAI,CAAsB,AAAtB,EAA8C,AAA9C,4CAA8C;AAC1B,GAArB,CAAC,OAAO,GAAG,CAAE,EAAE,CAA2B,AAA3B,EAA2D,AAA3D,yDAA2D;AAC7C,OAAzB,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM;AACzB,GAAG,CAAC,CAAC,GAAG,CAAC;AAET,GAAG,CAAC,IAAI,OAAS,CAAC;IAChB,UAAU,KAAO,CAAC;QAChB,EAA0B,AAA1B,oEAAsE;QAC1B,EAA1C,EAAE,MAAM,CAAC,CAAC,MAAM,CAAI,KACpB,EAAY,AAAZ,4BAA8B;QACZ,OAAX,IAAI,CAAM,MAAE,CAA0B,AAA1B,EAA8C,AAA9C,4CAA8C;aACxC,EAAlB,EAAE,MAAM,CAAC,CAAC,MAAM,CAAG,IAC1B,OAAO,IAAI,CAAQ,OAAC,CAAkB,AAAlB,EAAkC,AAAlC,gCAAkC;;aAEtC,EAAJ,AAAZ,4BAA8B;QACZ,OAAX,IAAI,MAAM,CAAC,CAAC;QAGrB,IAAI,CAAC,SAAS,GAAG,OAAO,CAAE,CAAsB,AAAtB,EAAwC,AAAxC,sCAAwC;QAChD,KAAb,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC;QACtC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAC,KAAK;QACvB,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAC,KAAK;QACrB,EAAE,EAAC,CAAC,GAAG,MAAM,CAAC,MAAM,GAAC,CAAC,EAAC,CAAC;YACtB,EAAkB,AAAlB,wCAAkB;YAClB,CAAC,IAAI,CAAC;YACN,IAAI;QACN,CAAC;IACH,CAAC,EAAC,EAAE;AACN,CAAC;AACD,IAAI","sources":["src/main.js"],"sourcesContent":["// html 就是放 HTML 的\r\n// style 就是放 CSS 的\r\nlet html = document.querySelector('#html');  // 通过 css 选择器找到 #demo 元素\r\nlet style = document.querySelector('#style')\r\nlet string = `/* 你好，我叫TK\r\n* 接下来我要演示我的前端功底\r\n* 首先我要准备一个div\r\n*/\r\n#div1{\r\n  border: 1px solid red;\r\n  width: 200px;\r\n  height: 200px; \r\n}\r\n/* 接下来我把 div 变成一个八卦图\r\n* 注意看好了\r\n* 首先，把 div 变成一个圆\r\n*/\r\n#div1{\r\n  border-radius: 50%;\r\n  box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n  border: none;\r\n}\r\n/* 八卦是阴阳形成的\r\n* 一黑一白\r\n*/\r\n#div1{\r\n  background: linear-gradient(90deg, rgba(255,255,255,1) 0%,\r\n  rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%,\r\n  rgba(0,0,0,1) 100%);\r\n}\r\n/* 加两个神秘的小球 */\r\n#div1::before{\r\n  width: 100px;\r\n  height: 100px;\r\n  top: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #000;\r\n  border-radius: 50%; \r\n  background: radial-gradient(circle, rgba(255,255,255,1) 0%,\r\n    rgba(255,255,255,1) 25%,\r\n    rgba(0,0,0,1) 25%,\r\n    rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n  width: 100px;\r\n  height: 100px;\r\n  bottom: 0;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  background: #fff;\r\n  border-radius: 50%; \r\n  background: radial-gradient(circle, rgba(0,0,0,1) 0%,\r\n  rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%,\r\n  rgba(255,255,255,1) 100%);\r\n}\r\n\r\n`;  // string 使用来保存要展示的结果的\r\nlet string2 = \"\"; // string2 使用来缓存要显示到屏幕上的结果的\r\nconsole.log(string.length);\r\nlet n = 0; \r\n\r\nlet step = () => {\r\n  setTimeout(() => {\r\n    // 如何是回车就显示回车，而不是显示多余的尖括号?\r\n    if (string[n] === \"\\n\"){\r\n      // 如果是回车就不照搬\r\n      string2 += \"<br>\"; // 在 HTML 里回车要表示成 \"<br>\"换行\r\n    } else if (string[n] === \" \"){ \r\n      string2 += \"&nbsp;\" // 空格就将改成 ‘&nbsp’ \r\n    } else {\r\n      // 如果不是回车就照搬\r\n      string2 += string[n];\r\n    }\r\n\r\n    html.innerHTML = string2; // 得到的结果放到 innerHTML里面\r\n    style.innerHTML = string.substring(0,n);\r\n    window.scrollTo(0,99999);\r\n    html.scrollTo(0,99999);\r\n    if(n < string.length-1){\r\n      // 如果 n 不是最后一个，就继续\r\n      n += 1; \r\n      step();\r\n    }\r\n  },50);\r\n};\r\nstep();"],"names":[],"version":3,"file":"index.65c7a1e5.js.map","sourceRoot":"/__parcel_source_root/"}